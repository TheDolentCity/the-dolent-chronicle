---
import { getCollection } from "astro:content";
import { ThemeSelect } from "@/components/themes/ThemeSelect";
import BaseLayout from "@/layouts/BaseLayout.astro";
import Prose from "@/components/markdown/Prose.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "@/constants";
import { PageHeader } from "@/components/app/PageHeader";
import { PageDescription } from "@/components/app/PageDescription";
import { PostList } from "@/components/posts/Posts";
import { TagList } from "@/components/tags/Tags";

// Get sorted posts
const posts = (await getCollection("posts")).sort((a, b) => b.data.published.valueOf() - a.data.published.valueOf());

// Get all tags from posts
const allTags = [
	...posts
		.map((post) => post.data.tags)
		.flat()
		.sort(),
];

// Count the instance of each tag
const map = new Map<string, number>();
allTags.forEach((tag) => {
	// Ignore empty tags
	if (tag?.trim() === "" || !tag) return;

	// Increment existing tag count, or set first tag count
	const count = map.get(tag);
	if (count) {
		map.set(tag, count + 1);
	} else {
		map.set(tag, 1);
	}
});

// Map to an iterable, easy to read type
const tags = map
	.entries()
	.map((entry) => ({
		tag: entry[0],
		count: entry[1],
	}))
	.toArray()
	.sort((a, b) => b.count - a.count);
---

<BaseLayout title={SITE_TITLE} description={SITE_DESCRIPTION}>
	<section class="max-w-[64rem] mx-auto pt-16 md:pt-32 pb-16">
		<Prose>
			<div class="space-y-2 sm:space-y-0 sm:flex sm:gap-4 sm:items-end sm:justify-between">
				<PageHeader>
					{SITE_TITLE}
				</PageHeader>
				<ThemeSelect client:load className="not-md:hidden" />
			</div>
			<PageDescription>
				{SITE_DESCRIPTION}
			</PageDescription>
			<hr />
			<PostList posts={posts} />
			<TagList tags={tags} />
		</Prose>
	</section>
</BaseLayout>
